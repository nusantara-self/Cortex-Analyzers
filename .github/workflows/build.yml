name: build

on:
  push:
    branches:
      - develop
    tags:
      - "*"
  workflow_dispatch:
  schedule:
    # Every Month, the first day at 8:42 
    - cron: "42 8 1 * *"

jobs:
  generate-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      analyzers_matrix: ${{ steps.set-matrix.outputs.analyzers_matrix }}
      responders_matrix: ${{ steps.set-matrix.outputs.responders_matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List analyzer and responder directories and build matrices
        id: set-matrix
        run: |
          echo "Listing analyzer directories in 'analyzers/'..."
          analyzer_dirs=$(find analyzers -mindepth 1 -maxdepth 1 -type d -printf '%f\n')
          echo "Found analyzer directories:"
          echo "$analyzer_dirs"

          echo "Listing responder directories in 'responders/'..."
          responder_dirs=$(find responders -mindepth 1 -maxdepth 1 -type d -printf '%f\n')
          echo "Found responder directories:"
          echo "$responder_dirs"

          # Build JSON for analyzers (each object has a directory name)
          analyzer_json=$(echo "$analyzer_dirs" | jq -R -s -c 'split("\n")[:-1] | map({directory: .})')
          # Build JSON for responders
          responder_json=$(echo "$responder_dirs" | jq -R -s -c 'split("\n")[:-1] | map({directory: .})')
          
          # Wrap them in an "include" object
          analyzers_matrix=$(echo "$analyzer_json" | jq -c '{include: .}')
          responders_matrix=$(echo "$responder_json" | jq -c '{include: map(. + {component: "responders"})}')

          echo "Generated analyzers matrix: $analyzers_matrix"
          echo "Generated responders matrix: $responders_matrix"
          
          {
            echo "analyzers_matrix<<EOF"
            echo "$analyzers_matrix"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
          
          {
            echo "responders_matrix<<EOF"
            echo "$responders_matrix"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

  build_analyzers:
    name: Build Analyzers (multi-arch)
    needs: generate-matrix
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_CLI_EXPERIMENTAL: enabled
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.generate-matrix.outputs.analyzers_matrix).include[*].directory }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create and use a new Buildx builder
        run: |
          docker buildx create --name mybuilder --driver docker-container --use --bootstrap || docker buildx use mybuilder
          docker buildx ls
      - name: Pre-pull builder image (if not already cached)
        run: docker pull thehiveproject/cortex-neurons-builder:latest

      - name: Build analyzer ${{ matrix.directory }} (linux/amd64,linux/arm64)
        uses: docker://thehiveproject/cortex-neurons-builder:latest
        with:
          driver-opts: image=moby/buildkit:v0.19.0
          args: |
            --namespace softybear --path analyzers -w ${{ matrix.directory }} --registry_dockerhub ${{ secrets.REGISTRY_DOCKERHUB }} --platform linux/amd64,linux/arm64 ${{ (startsWith(github.ref, 'refs/tags') || github.event_name == 'schedule') && '--stable' || '' }}

  build_responders:
    name: Build Responders (multi-arch)
    needs: generate-matrix
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_CLI_EXPERIMENTAL: enabled
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.generate-matrix.outputs.responders_matrix).include[*].directory }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create and use a new Buildx builder
        run: |
          docker buildx create --name mybuilder --driver docker-container --use --bootstrap || docker buildx use mybuilder
          docker buildx ls
      - name: Pre-pull builder image (if not already cached)
        run: docker pull thehiveproject/cortex-neurons-builder:latest

      - name: Build responder ${{ matrix.directory }} (linux/amd64,linux/arm64)
        uses: docker://thehiveproject/cortex-neurons-builder:latest
        with:
          driver-opts: image=moby/buildkit:v0.19.0
          args: |
            --namespace softybear --path responders -w ${{ matrix.directory }} --registry_dockerhub ${{ secrets.REGISTRY_DOCKERHUB }} --platform linux/amd64,linux/arm64 ${{ (startsWith(github.ref, 'refs/tags') || github.event_name == 'schedule') && '--stable' || '' }}