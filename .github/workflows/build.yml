name: build

on:
  push:
    branches:
      - develop
      
jobs:
  generate-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      responders_matrix: ${{ steps.set-matrix.outputs.responders_matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List analyzer and responder directories and build matrices
        id: set-matrix
        run: |
          echo "Listing analyzer directories in 'analyzers/'..."
          analyzer_dirs=$(find analyzers -mindepth 1 -maxdepth 1 -type d -printf '%f\n')
          echo "Found analyzer directories:"
          echo "$analyzer_dirs"

          echo "Listing responder directories in 'responders/'..."
          responder_dirs=$(find responders -mindepth 1 -maxdepth 1 -type d -printf '%f\n')
          echo "Found responder directories:"
          echo "$responder_dirs"

          # Build JSON for responders
          responder_json=$(echo "$responder_dirs" | jq -R -s -c 'split("\n")[:-1] | map({directory: .})')
          
          # Add a component key to each and wrap them with "include"
          responders_matrix=$(echo "$responder_json" | jq -c '{include: map(. + {component: "responders"})}')
          
          echo "Generated responders matrix: $responders_matrix"
          {
            echo "responders_matrix<<EOF"
            echo "$responders_matrix"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

  build_responders:
    name: Build Responders
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.responders_matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v3
        with:
          context: ./responders
          # Use the Dockerfile in the worker folder
          file: ./${{ matrix.directory }}/Dockerfile
          # Build for both amd64 and arm64.
          platforms: linux/amd64,linux/arm64
          # Push the image so that a manifest is created.
          push: true
          # Set your image tag (adjust the repository and tag as needed).
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.directory }}:latest
          # Add labels to the image.
          labels: |
            schema-version=1.0
            org.label-schema.build-date=${{ steps.build_date.outputs.date }}
            org.label-schema.name=analyzer
            org.label-schema.description=Fallback analyzer build
            org.label-schema.url=https://thehive-project.org
            org.label-schema.vcs-url=https://github.com/TheHive-Project/Cortex-Analyzers
            org.label-schema.vcs-ref=${{ github.sha }}
            org.label-schema.vendor=TheHive Project
            org.label-schema.version=1.0.0
